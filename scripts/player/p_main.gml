#define p_main
//---------------------------------------------------------------------------------------/
//                               Positioning                                              
//---------------------------------------------------------------------------------------/

//change the player's position according to his movement values
p_position()
//don't let player go out of bounds
p_out_of_bounds()

//--------------------------------------------------------------------------------------------------//
if(action <> action_die) //<--     start of dying loop                                                  //
{//------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------/
//                                     Artificial Intelligence                                        
//---------------------------------------------------------------------------------------/

if(id == global.player2) 
    ai_tailsfollow()


//---------------------------------------------------------------------------------------/
//                               Player Attacking                                  
//---------------------------------------------------------------------------------------/

p_attack_check()

//---------------------------------------------------------------------------------------/
//                               Stage Object Collisions                                  
//---------------------------------------------------------------------------------------/

//Stage object collisions are put between the positioning and collision checking in order to
//allow them to occur and not register as obstacles until after the neccessary events.
    p_stage_checkpoints()
    p_stage_springs()
    p_stage_rings()   
    p_stage_enemies()
    if(player == 0)
        p_stage_itembox() //only main player can obtain power ups!
    p_stage_switches() 
    p_stage_spikes()
    if(instance_number(obj_robotnik1) > 0)
    p_stage_boss()
   

//---------------------------------------------------------------------------------------/
//                                     Player Input                                          
//---------------------------------------------------------------------------------------/
//Player Controls/Interaction

    p_control()

if(v < 0)
    directionMoving = -1
else if(v > 0)
    directionMoving = 1

    
//---------------------------------------------------------------------------------------/
//                                   It's BossMode!?                 
//---------------------------------------------------------------------------------------/ 
//Tests when Sonic runs into Boss Area
if(id == global.player1)
    p_boss_mode()


//---------------------------------------------------------------------------------------/
//                                    Collision/Obstacle Handling                   
//---------------------------------------------------------------------------------------/
//if position has changed, position the player out of obstacles, cling to slopes if neccesary,
//check collisions & find the angle of the slope you are standing on(if necessary)

    p_obstacle_handling()


//---------------------------------------------------------------------------------------/
//                                      Enter/Exit Loops                                  
//---------------------------------------------------------------------------------------/

//detect when the player is transfering collision layers for loops(or other segments)
    p_loop_transfer()

//---------------------------------------------------------------------------------------/
//                                       Gravity                                            
//---------------------------------------------------------------------------------------/

//----------------------------/
//Force of Gravity
//----------------------------/
    p_gravityforce()

    
//----------------------------/
//Jump Height Control
//----------------------------/
    p_gravityjump()

//----------------------------/
//Calculate Fall Height
//----------------------------/    
    p_fallheightcalculate()

    
//---------------------------------------------------------------------------------------/
//                                       Slopes                                           
//---------------------------------------------------------------------------------------/
//for events related to slopes, such as landing on slopes, running off,
//slope's force on velocity, pushed back by slopes

    p_slopes()
    
    
//---------------------------------------------------------------------------------------/
//                                       Random Game Features                                           
//---------------------------------------------------------------------------------------/
   //calculate rates, water
     p_water()
    
    //speed shoes
    p_speedshoes()
    
//calculate invincibility
    p_invincibility()

       
//---------------------------------------------------------------------------------------/
//                                       Getting Hurt                                        
//---------------------------------------------------------------------------------------/
//manage movement while hurt/dead

    p_action_hurt()

    
//---------------------------------------------------------------------------------------/
//                                       Tails Fly                                      
//---------------------------------------------------------------------------------------/
//manage Tails' movement while flying

    p_action_fly()
    
    
//--------------------------------------------------------------------------------------------------//
    }//< -- end of dying loop                                                                       //
//--------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------/
//                                       Dead                                    
//---------------------------------------------------------------------------------------/
//manage movement while dead

p_action_die()

//---------------------------------------------------------------------------------------/
//                                       Animation                                           
//---------------------------------------------------------------------------------------/
//set the player's animations as necessary

p_set_anim()


//---------------------------------------------------------------------------------------/
//                                     Random Stuff                                          
//---------------------------------------------------------------------------------------/
//set sonic's collision mask for other events in game

mask_index = spr_playermask

